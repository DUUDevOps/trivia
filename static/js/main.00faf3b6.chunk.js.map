{"version":3,"sources":["containers/client/StandingPage/styles.module.css","containers/admin/GradingPage/styles.module.css","containers/client/PlayPage/styles.module.css","containers/admin/DashboardPage/styles.module.css","containers/admin/StandingsPage/styles.module.css","containers/admin/HostQuestionPage/styles.module.css","components/TextInput/styles.module.css","containers/admin/HostPage/styles.module.css","containers/admin/EditPage/styles.module.css","assets/DukeNiteLogo.png","containers/HomePage/styles.module.css","containers/admin/LoginPage/styles.module.css","components/PopUp/styles.module.css","serviceWorker.js","components/Firebase/firebase.js","tools/helpers.js","tools/AdminRoute.js","tools/GameRoute.js","containers/HomePage/index.js","components/TextInput/index.js","containers/client/PlayPage/index.js","containers/client/WaitingPage/excuses.js","containers/client/WaitingPage/index.js","containers/client/AnswerPage/index.js","containers/client/StandingPage/index.js","components/Loader/index.js","containers/admin/LoginPage/index.js","components/PopUp/index.js","containers/admin/DashboardPage/index.js","containers/admin/EditPage/index.js","containers/admin/HostPage/index.js","containers/admin/HostQuestionPage/index.js","containers/admin/GradingPage/index.js","containers/admin/StandingsPage/index.js","index.js","containers/client/AnswerPage/styles.module.css","containers/client/WaitingPage/styles.module.css","components/Loader/styles.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","Firebase","signInWithEmail","email","password","callback","auth","signInWithEmailAndPassword","then","res","success","msg","catch","err","message","createQuiz","name","round","i","push","q","a","img","imgId","pts","newQuiz","round1","round2","round3","newQuizRef","quizzesRef","set","key","deleteQuiz","id","child","remove","saveQuiz","quiz","getQuizzes","quizzes","once","snapshot","forEach","data","val","console","error","getQuiz","exists","hostQuiz","ref","quizId","date","getCurrentFormattedDate","stage","teams","getGame","liveGameRef","joinGame","teamName","teamIds","ids","inGame","setStage","newStage","getLiveGameRef","getQuizzesRef","setTeamAnswers","answers","removeTeam","setStandings","uploadImage","imageUrl","cloudinary","uploader","upload","result","secure_url","public_id","removeImage","imageId","destroy","Date","toISOString","slice","this","cloud_name","api_key","api_secret","process","REACT_APP_CLOUDINARY_API_SECRET","isAuth","token","jwt","verify","decoded","placeTexts","getIdsText","string","length","AdminRoute","state","haveAccess","loaded","checkAccess","bind","localStorage","getItem","setState","component","rest","render","to","withRouter","GameRoute","gameData","JSON","parse","HomePage","className","styles","container","src","DukeNiteLogo","alt","logo","draggable","textContainer","header","buttonContainer","button","TextInput","placeholder","onChange","autoFocus","value","width","type","customStyle","input","style","PlayPage","team","joinable","dbExists","currentTeam","dbRef","changeId","onJoin","onRejoin","game","on","off","e","index","target","preventDefault","filter","Object","keys","includes","removeItem","setItem","stringify","history","noRejoin","onSubmit","section","subheader","inputContainer","isMobile","map","idRow","classNames","plus","role","tabIndex","onClick","errorText","next","arrow","noJoin","opacity","display","excuses","array","Math","floor","random","WaitingPage","excuse","getExcuse","changeExcuse","split","text","excuseText","noButton","AnswerPage","changeAnswer","num","answerContainer","answerNum","StandingPage","place","score","diff","diffTeam","tied","standings","entries","sort","b","currentPlace","s","indexOf","counter","abs","placeText","descText","Loader","margin","holder","bounce1","bounce2","bounce3","LoginPage","loading","loggedIn","onLogin","sign","user","expiresIn","form","PopUp","buttonOne","buttonTwo","inputValue","inputChange","inputPlaceholder","modal","bottomHolder","undefined","DashboardPage","creating","createText","deleteId","isLiveGame","onCreate","onDelete","loadQuizzes","loadLiveGame","hostGame","response","stageInfo","gameId","createContainer","createIcon","liveGameButton","liveGameText","quizzesContainer","quizHolder","quizContainer","quizButtonContainer","effect","tooltip","quizButton","data-tip","EditPage","redirect","saving","editTitle","showImageModal","imageIndex","uploadingImage","uploadError","params","setValue","setTitle","save","max","isImageUrl","url","headerContainer","buttonIcon","buttonText","marginRight","roundContainer","selected","questionContainer","questionNum","inputsContainer","inputText","centeredRow","pointsContainer","fontSize","lineHeight","fontWeight","textAlign","pointsText","imageContainer","image","deleteImage","imageButton","imageIcon","imageText","start","headerRow","headerText","startButton","instructText","teamsContainer","t","HostQuestionPage","qnum","parseInt","roundNum","question","questions","endRound","substring","questionImage","questionText","height","mode","nextButton","right","bottom","left","nextProps","prevState","newQnum","GradingPage","teamNames","currentTeamNum","teamCorrects","showQuestion","currentRoundTeamScores","changeGrade","nextTeam","timeout","setTimeout","document","getElementById","select","clearTimeout","reduce","accumulator","currentValue","scrollTo","gradingContainer","divider","gradeContainer","showButton","questionIcon","viewText","answer","marginLeft","min","popUp","showImage","showText","closeIcon","StandingsPage","nextRound","headerLogo","standingsHolder","marginBottom","standingContainer","nameText","forceSingleModeWidth","scoreText","ReactDOM","Provider","exact","path","PlayStandingPage","HostPage","HostStandingsPage","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00faf3b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3Z2kR\",\"placeText\":\"styles_placeText__3VZfZ\",\"descText\":\"styles_descText__3Gr_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3fmOw\",\"header\":\"styles_header__16etK\",\"nextButton\":\"styles_nextButton__2UA7U\",\"arrow\":\"styles_arrow__3KfRU\",\"headerContainer\":\"styles_headerContainer__2LCUg\",\"subheader\":\"styles_subheader__3kMlB\",\"gradingContainer\":\"styles_gradingContainer__3phHe\",\"gradeContainer\":\"styles_gradeContainer__FhMLm\",\"showButton\":\"styles_showButton__HKt2H\",\"questionIcon\":\"styles_questionIcon__-BlJq\",\"viewText\":\"styles_viewText__2u0H_\",\"answer\":\"styles_answer__23Llh\",\"pointsContainer\":\"styles_pointsContainer__1nStF\",\"pointsText\":\"styles_pointsText__qyd6W\",\"divider\":\"styles_divider__2renQ\",\"modal\":\"styles_modal__1UmlW\",\"popUp\":\"styles_popUp__IIsjh\",\"showImage\":\"styles_showImage__3styT\",\"showText\":\"styles_showText__38JKL\",\"closeIcon\":\"styles_closeIcon__375wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2Gsp7\",\"header\":\"styles_header__2VMbp\",\"next\":\"styles_next__13gc7\",\"noJoin\":\"styles_noJoin__1QhOc\",\"errorText\":\"styles_errorText__2o_sS\",\"arrow\":\"styles_arrow__9MoYa\",\"section\":\"styles_section__2Kdy_\",\"subheader\":\"styles_subheader__pHoVV\",\"inputContainer\":\"styles_inputContainer__2nUOK\",\"idRow\":\"styles_idRow__1X-NH\",\"plus\":\"styles_plus__2y76E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3UfNe\",\"header\":\"styles_header__1WLkC\",\"createContainer\":\"styles_createContainer__qAYDm\",\"createIcon\":\"styles_createIcon__3qRoa\",\"createText\":\"styles_createText__1NVii\",\"liveGameButton\":\"styles_liveGameButton__3hTQb\",\"liveGameText\":\"styles_liveGameText__1nT77\",\"quizzesContainer\":\"styles_quizzesContainer__jTXkQ\",\"quizHolder\":\"styles_quizHolder__e0XJf\",\"quizContainer\":\"styles_quizContainer__1iojC\",\"quizButtonContainer\":\"styles_quizButtonContainer__2zByQ\",\"tooltip\":\"styles_tooltip__zFkMe\",\"quizButton\":\"styles_quizButton__yI1Gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3lTrs\",\"headerRow\":\"styles_headerRow__MiJ8j\",\"headerText\":\"styles_headerText__3p0vd\",\"headerLogo\":\"styles_headerLogo__217og\",\"nextButton\":\"styles_nextButton__SYerh\",\"arrow\":\"styles_arrow__dOaGy\",\"standingsHolder\":\"styles_standingsHolder__2XH4Y\",\"standingContainer\":\"styles_standingContainer__2KhXn\",\"placeText\":\"styles_placeText__3dTXT\",\"nameText\":\"styles_nameText__3kyKj\",\"scoreText\":\"styles_scoreText__1EzMm\",\"divider\":\"styles_divider__2bw6v\",\"tooltip\":\"styles_tooltip__1WKz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2Pfgh\",\"logo\":\"styles_logo__385PG\",\"header\":\"styles_header__20tLf\",\"questionContainer\":\"styles_questionContainer__1qrEh\",\"questionText\":\"styles_questionText__3XhaJ\",\"questionImage\":\"styles_questionImage__3gVwK\",\"nextButton\":\"styles_nextButton__24E7p\",\"arrow\":\"styles_arrow__1cgkW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__2gjR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1rzFR\",\"headerRow\":\"styles_headerRow__1Wabd\",\"logo\":\"styles_logo__G8q3e\",\"headerText\":\"styles_headerText__1NOiL\",\"instructText\":\"styles_instructText__1DB3c\",\"teamsContainer\":\"styles_teamsContainer__2d63P\",\"team\":\"styles_team__33vZw\",\"startButton\":\"styles_startButton__2vf_p\",\"arrow\":\"styles_arrow__3B4Yu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__qhjOb\",\"headerContainer\":\"styles_headerContainer__1Fiem\",\"header\":\"styles_header__Vtao2\",\"buttonContainer\":\"styles_buttonContainer__3QA4Z\",\"button\":\"styles_button__3O0E0\",\"buttonIcon\":\"styles_buttonIcon__3VGcQ\",\"buttonText\":\"styles_buttonText__gSwKF\",\"roundContainer\":\"styles_roundContainer__3ZDbV\",\"round\":\"styles_round__g3cio\",\"selected\":\"styles_selected__1ENd6\",\"questionContainer\":\"styles_questionContainer__31Px4\",\"questionNum\":\"styles_questionNum__2k410\",\"inputsContainer\":\"styles_inputsContainer__2RZSq\",\"inputContainer\":\"styles_inputContainer__ssBno\",\"inputText\":\"styles_inputText__3IBUw\",\"centeredRow\":\"styles_centeredRow__2Blt3\",\"pointsContainer\":\"styles_pointsContainer__n6-d7\",\"pointsText\":\"styles_pointsText__PnDmw\",\"imageButton\":\"styles_imageButton__2qrWt\",\"imageIcon\":\"styles_imageIcon__1Q1H1\",\"imageText\":\"styles_imageText__22-z4\",\"imageContainer\":\"styles_imageContainer__12PEA\",\"image\":\"styles_image__CzzDz\",\"deleteImage\":\"styles_deleteImage__RvIPB\"};","module.exports = __webpack_public_path__ + \"static/media/DukeNiteLogo.b3375bd4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3do-n\",\"logo\":\"styles_logo__pD3PO\",\"textContainer\":\"styles_textContainer__3WpNc\",\"header\":\"styles_header__Ar5HI\",\"buttonContainer\":\"styles_buttonContainer__1X4ep\",\"button\":\"styles_button__2xx59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3AxTy\",\"form\":\"styles_form__EpAMH\",\"header\":\"styles_header__Ox5bv\",\"subheader\":\"styles_subheader__2bniS\",\"button\":\"styles_button__1aRaP\",\"error\":\"styles_error__3008p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__2uwhm\",\"container\":\"styles_container__3UtJn\",\"text\":\"styles_text__1qdLN\",\"bottomHolder\":\"styles_bottomHolder__gexfi\",\"buttonContainer\":\"styles_buttonContainer__b14wl\",\"button\":\"styles_button__3t6ZN\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport cloudinary from 'cloudinary/lib/cloudinary';\n\nconst config = {\n  apiKey: \"AIzaSyARGwqdebOb043X-pjG6b18iGkJ7LDRk68\",\n  authDomain: \"duu-trivia-c9587.firebaseapp.com\",\n  databaseURL: \"https://duu-trivia-c9587.firebaseio.com\",\n  projectId: \"duu-trivia-c9587\",\n  storageBucket: \"duu-trivia-c9587.appspot.com\",\n  messagingSenderId: \"653573216029\",\n  appId: \"1:653573216029:web:c9f655c0b7b000eddef3f4\"\n};\n\nconst LIVE_GAME_REF = \"currentGame\";\nconst QUIZZES_REF = \"quizzes\";\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.liveGameRef = this.getLiveGameRef();\n    this.quizzesRef = this.getQuizzesRef();\n\n    cloudinary.config({\n      cloud_name: 'db5gwfiow',\n      api_key: '346544944152446',\n      api_secret: process.env.REACT_APP_CLOUDINARY_API_SECRET,\n    });\n  }\n\n  /**\n   * @param {string} email\n   * @param {string} password\n   * @param {function} callback\n   */\n  signInWithEmail = (email, password, callback) => {\n    this.auth.signInWithEmailAndPassword(email, password)\n      .then((res) => {\n        callback({ success: true, msg: email });\n      })\n      .catch((err) => {\n        callback({ success: false, msg: err.message })\n      });\n  };\n\n  /**\n   * @param {String} name\n   * @param {function} callback\n   */\n  createQuiz = (name, callback) => {\n    // create an empty round array\n    // 11 questions in case of bonus\n    const round = [];\n    for (let i = 0; i < 11; i++) {\n      round.push({\n        q: '',\n        a: '',\n        img: '',\n        imgId: '',\n        pts: 1,\n      });\n    }\n\n    const newQuiz = {\n      name,\n      round1: round,\n      round2: round,\n      round3: round\n    };\n\n    let newQuizRef = this.quizzesRef.push();\n    newQuizRef.set(newQuiz)\n      .then(() => callback(newQuizRef.key));\n  };\n\n  /**\n   * Delete a quiz by its id\n   * @param {String} quizId\n   * @param {function} callback\n   */\n  deleteQuiz = (id, callback) => {\n    this.quizzesRef.child(id)\n      .remove()\n      .then(callback);\n  };\n\n  /**\n   * save a whole quiz\n   * it's essential that the quiz is the whole quiz object\n   * @param {String} quizId\n   * @param {Object} quiz\n   * @param {function} callback\n   */\n  saveQuiz = (id, quiz, callback) => {\n    this.quizzesRef.child(id)\n      .set(quiz)\n      .then(callback);\n  };\n\n  /**\n   * returns all quizzes in the database\n   * @param {function} callback\n   */\n  getQuizzes = (callback) => {\n    const quizzes = [];\n    this.quizzesRef.once('value')\n      .then(snapshot => {\n        snapshot.forEach(child => {\n          quizzes.push({\n            id: child.key,\n            data: child.val()\n          });\n        });\n        callback(quizzes);\n      })\n      .catch(err => console.error('Error getting documents', err));\n  };\n\n  /**\n   * Get a quiz by its ID\n   * @param {String} quizID\n   * @param {function} callback\n   */\n  getQuiz = (id, callback) => {\n    this.quizzesRef.child(id)\n      .once('value')\n      .then(snapshot => {\n        if (!snapshot.exists()) {\n          callback({ success: false });\n        } else {\n          callback({ success: true, data: snapshot.val() });\n        }\n      })\n      .catch((err) => {\n        console.error('Error getting document', err);\n        callback({ success: false });\n      });\n  };\n\n  /**\n   * create a new game by hosting a quiz\n   * @param {String} quizId\n   */\n  hostQuiz = (id) => {\n    // store the questions here so we can easily get them\n    // and they don't change\n    this.getQuiz(id, (res) => {\n      if (!res.data) return;\n\n      firebase.database().ref(LIVE_GAME_REF).set({\n        quizId: id,\n        date: this.getCurrentFormattedDate(),\n        stage: 'join',\n        round1: res.data.round1,\n        round2: res.data.round2,\n        round3: res.data.round3,\n        teams: [],\n      });\n    });\n  };\n\n  /**\n   * calls the callback with all the data for the current game\n   * @param {function} callback\n   */\n  getGame = (callback) => {\n    this.liveGameRef.once('value')\n      .then((snapshot) => {\n        callback({ success: true, data: snapshot.val() });\n      })\n      .catch(err => callback({ success: false }));\n  };\n\n  /**\n   * joins the live game by adding the team\n   * to the teams object\n   * @param {String} teamName\n   * @param {array} teamIds\n   * @param {function} callback\n   */\n  joinGame = (teamName, teamIds, callback) => {\n    this.liveGameRef.once('value')\n      .then((snapshot) => {\n        // if first team, we create the new object\n        const teams = snapshot.val().teams || {};\n        teams[teamName] = {\n          ids: teamIds,\n        };\n\n        firebase.database().ref(LIVE_GAME_REF).child('teams').set(teams);\n\n        // calls callback with the date and team name to\n        // store in local storage for the client\n        // date for verification of being in live game\n        // name for accessing team in live game later\n        callback({\n          date: snapshot.val().date,\n          name: teamName,\n        });\n      });\n  };\n\n  /**\n   * used to verify that the user is in the live game\n   * by seeing if their date is equal to the live game's start date\n   * @param {String} date\n   * @param {function} callback\n   */\n  inGame = (date, callback) => {\n    this.liveGameRef.once('value')\n      .then((snapshot) => {\n        callback(snapshot.val().date === date);\n      });\n  };\n\n  /**\n   * changes the live game's stage\n   * @param {String} newStage\n   * @param {function} callback\n   */\n  setStage = (newStage, callback) => {\n    this.liveGameRef\n      .child('stage')\n      .set(newStage)\n      .then(callback);\n  }\n\n  /**\n   * returns a reference to the live game part of the database\n   */\n  getLiveGameRef = () => {\n    return firebase.database().ref(LIVE_GAME_REF);\n  };\n\n  /**\n   * Returns a reference to the quizzes part of the database\n   */\n  getQuizzesRef = () => {\n    return firebase.database().ref(QUIZZES_REF);\n  };\n\n  /**\n   * save a team answers for a round\n   * @param {string} teamName\n   * @param {string} round\n   * @param {array} answers\n   */\n  setTeamAnswers = (teamName, round, answers) => {\n    this.liveGameRef.child(`teams/${teamName}/${round}`).set(answers);\n  };\n\n  /**\n   * remove a team from the live game\n   * @param {string} teamName\n   */\n  removeTeam = (teamName) => {\n    this.liveGameRef.child(`teams/${teamName}`).remove();\n  }\n\n  /**\n   * set the new team standings and set stage to standings\n   * @param {object} teams\n   * @param {string} round\n   * @param {function} callback\n   */\n  setStandings = (teams, round, callback) => {\n    // inefficient christmas tree, but not sure if await works with firebase\n    this.liveGameRef.child('teams').set(teams)\n      .then(() => {\n        this.setStage(`${round}-${round === 'round3' ? 'final standings' : 'standings'}`, callback);\n      });\n  };\n\n  /**\n  * upload a image to firebase storage and get the url\n  * @param {string} imageUrl\n  * @param {function} callback\n  */\n  uploadImage = (imageUrl, callback) => {\n    // we want to take an image url hosted somewhere else\n    // and then host it on cloudinary and get our own url\n    cloudinary.uploader.upload(imageUrl, (result) => {\n      // return the url to show the image, and uniqueId to delete it if needed later\n      callback(result.secure_url, result.public_id)\n    });\n  };\n\n  /**\n   * removes an image from firebase storage\n   * @param {string} imageId\n   */\n  removeImage = (imageId) => {\n    cloudinary.uploader.destroy(imageId);\n  };\n\n  /**\n   * @returns {string}\n   */\n  getCurrentFormattedDate = () => {\n    // this will return the date in the format MM-DD-YYYY\n    // - used for uniqueness in games\n    return new Date().toISOString().slice(0, 10);\n  };\n}\n\n// Order of stages:\n// 1: join\n// 2: round1\n// 3: round1-grading\n// 4: round1-standings\n// 5: round2\n// 6: round2-grading\n// 7: round2-standings\n// 8: round3\n// 9: round3-grading\n// 10: round3-final standings\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default Firebase;\n\nexport { FirebaseContext };\n","import jwt from 'jsonwebtoken';\n\n// gets if the user is authenticated by their JWT\n// use callback because of async\nexport const isAuth = (token, callback) => {\n  jwt.verify(token, process.env.REACT_APP_JWT_SECRET, (err, decoded) => {\n    if (err) {\n      callback({ success: false, data: err });\n    } else {\n      callback({ success: true, data: decoded});\n    }\n  });\n};\n\n// grabs a random element from the provided array\nexport const randomElement = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nconst placeTexts = [\n  'st',\n  'nd',\n  'rd',\n  'th',\n];\n\n// returns element from placeTexts that matches place\nexport const getPlaceText = (place) => {\n  return place % 100 < 11 || place % 100 > 13\n    ? place % 10 === 1\n      ? placeTexts[0] : place % 10 === 2\n        ? placeTexts[1] : place % 10 === 3\n          ? placeTexts[2] : placeTexts[3] : placeTexts[3];\n};\n\n// takes net ids and puts them in a string\nexport const getIdsText = (ids) => {\n  let string = ids[0];\n  if (ids.length === 2) {\n    string += ` & ${ids[1]}`;\n  } else {\n    for (let i = 1; i < ids.length; i++) {\n      if (i === ids.length - 1) {\n        string += `, & ${ids[i]}`;\n      } else {\n        string += `, ${ids[i]}`;\n      }\n    }\n  }\n  return string;\n};\n","import React from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { isAuth } from './helpers';\n\nclass AdminRoute extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      haveAccess: false,\n      loaded: false,\n    };\n\n    this.checkAccess = this.checkAccess.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkAccess();\n  }\n\n  // see if we can access the page\n  // for admin pages, we just need to have\n  // a valid jwt in local storage\n  checkAccess() {\n    isAuth(localStorage.getItem('token'), (res) => {\n      this.setState({\n        haveAccess: res.success,\n        loaded: true,\n      });\n    });\n  }\n\n  render() {\n    // don't load the page until we know if we can access it or not\n    if (!this.state.loaded) return null;\n\n    // do this to take the props from the AdminRoute to a normal Route\n    const { component: Component, ...rest } = this.props;\n\n    // once we figure out if we have access, either load the page or redirect\n    return (\n      <Route\n        {...rest}\n        render={(props) => {\n          return this.state.haveAccess ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to=\"/admin/login\" />\n          );\n        }}\n      />\n    );\n  }\n}\n\nAdminRoute.propTypes = {\n  component: PropTypes.func,\n};\n\nexport default withRouter(AdminRoute);\n","import React from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { withFirebase } from '../components/Firebase/firebase';\n\nclass GameRoute extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      haveAccess: false,\n      loaded: false,\n    };\n\n    this.firebase = props.firebase;\n\n    this.checkAccess = this.checkAccess.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkAccess();\n  }\n\n  // see if we can access the page\n  // for game page, we need to see if the game data\n  // stored in local storage is for the current game\n  checkAccess() {\n    const gameData = JSON.parse(localStorage.getItem('game'));\n\n    if (!gameData) {\n      this.setState({\n        haveAccess: false,\n        loaded: true,\n      });\n    } else {\n      this.firebase.inGame(gameData.date, (haveAccess) => {\n        this.setState({\n          haveAccess: haveAccess,\n          loaded: true,\n        });\n      });\n    }\n  }\n\n  render() {\n    // don't load the page until we know if we can access it or not\n    if (!this.state.loaded) return null;\n\n    // do this to take the props from the GameRoute to a normal Route\n    const { component: Component, ...rest } = this.props;\n\n    // once we figure out if we have access, either load the page or redirect\n    return (\n      <Route\n        {...rest}\n        render={(props) => {\n          return this.state.haveAccess ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to=\"/play\" />\n          );\n        }}\n      />\n    );\n  }\n}\n\nGameRoute.propTypes = {\n  component: PropTypes.func,\n  firebase: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(GameRoute));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport DukeNiteLogo from '../../assets/DukeNiteLogo.png';\nimport styles from './styles.module.css';\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <img src={DukeNiteLogo} alt=\"Duke@Nite Logo\" className={styles.logo} draggable={false} />\n        <div className={styles.textContainer}>\n          <div className={styles.header}>\n            trivia night\n          </div>\n\n          <div className={styles.buttonContainer}>\n            <Link className={styles.button} to=\"/play\">\n              play\n            </Link>\n            <Link className={styles.button} to=\"/admin/login\">\n              login\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.css';\n\nconst TextInput = ({ placeholder, onChange, autoFocus, value, width, type, customStyle, id }) => {\n  // fontSize defaults to 20px if not included\n  return (\n    <input\n      className={styles.input}\n      style={{\n        width: `calc(${width} - 20px)`,\n        ...customStyle,\n      }}\n      id={id}\n      placeholder={placeholder}\n      onChange={onChange}\n      type={type || 'text'}\n      autoFocus={autoFocus ? 'autofocus' : ''}\n      value={value}\n    />\n  );\n};\n\nTextInput.propTypes = {\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  autoFocus: PropTypes.bool,\n  value: PropTypes.any,\n  width: PropTypes.string,\n  type: PropTypes.string,\n  customStyle: PropTypes.object,\n  id: PropTypes.string,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport classNames from 'classnames';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport TextInput from '../../../components/TextInput';\n\nclass PlayPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      team: '',\n      ids: [''],\n      joinable: false,\n      error: '',\n      dbExists: true,\n      currentTeam: '',\n    };\n\n    this.firebase = props.firebase;\n    this.dbRef = this.firebase.getLiveGameRef();\n\n    this.changeId = this.changeId.bind(this);\n    this.onJoin = this.onJoin.bind(this);\n    this.onRejoin = this.onRejoin.bind(this);\n  }\n\n  componentDidMount() {\n    // see if we can join the game right now\n    this.firebase.getGame((game) => {\n      if (!game.success) {\n        this.setState({ dbExists: false });\n      } else {\n        this.setState({\n          joinable: game.data.stage !== 'round3-final standings',\n          dbExists: true,\n        });\n      }\n    });\n\n    // in the future, listen for changes\n    this.dbRef.on('value', (snapshot) => {\n      if (snapshot.exists()) {\n        this.setState({\n          joinable: snapshot.val().stage !== 'round3-final standings',\n        });\n      }\n    });\n\n    // allow team to reconnect\n    const gameData = JSON.parse(localStorage.getItem('game'));\n    if (gameData) {\n      // make sure its a valid token\n      this.firebase.inGame(gameData.date, (haveAccess) => {\n        this.setState({\n          currentTeam: haveAccess ? gameData.name : '',\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    // stop listening so we don't try to update this page when we're not here\n    this.dbRef.off('value');\n  }\n\n  changeId(e, index) {\n    const ids = [...this.state.ids];\n    ids[index] = e.target.value;\n    this.setState({ ids, error: '' });\n  }\n\n  onJoin(e) {\n    e.preventDefault();\n\n    let error = '';\n\n    const ids = this.state.ids.filter((id) => (id !== ''));\n    if (!ids[0]) {\n      error = 'we need at least one net id';\n    }\n\n    if (!this.state.team) {\n      error = \"what's your team's name\";\n    }\n\n    this.firebase.getGame((res) => {\n      if (!res.success) return;\n      const game = res.data;\n      const teams = game.teams ? Object.keys(game.teams) : [];\n      if (teams.includes(this.state.team)) {\n        error = \"team name already taken\";\n      }\n\n      if (error) {\n        this.setState({ error });\n      } else {\n        // remove old team\n        if (this.state.currentTeam) {\n          this.firebase.removeTeam(this.state.currentTeam);\n          localStorage.removeItem('game');\n        }\n        // join game\n        this.firebase.joinGame(this.state.team, ids, (data) => {\n          // localStorage can't store objects, so we stringify it\n          // but this means we have to call JSON.parse each time we want to access it\n          localStorage.setItem('game', JSON.stringify(data));\n          // waiting will automatically redirect it to the right page\n          this.props.history.push('/play/waiting');\n        });\n      }\n    });\n  }\n\n  onRejoin() {\n    // clear token and state if we can't actually rejoin\n    const noRejoin = () => {\n      localStorage.removeItem('game');\n      this.setState({ currentTeam: '' });\n    };\n\n    // make sure token is still valid\n    const gameData = JSON.parse(localStorage.getItem('game'));\n    if (gameData) {\n      this.firebase.inGame(gameData.date, (haveAccess) => {\n        // then, see if we are still a team in the game\n        this.firebase.getGame((res) => {\n          if (!res.success) return;\n          const game = res.data;\n          const teams = game.teams ? Object.keys(game.teams) : [];\n          if (teams.includes(gameData.name)) {\n            // waiting will automatically redirect it to the right page\n            this.props.history.push('/play/waiting');\n          } else {\n            noRejoin();\n          }\n        });\n      });\n    } else {\n      noRejoin();\n    }\n  }\n\n  render() {\n    if (!this.state.dbExists) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <form onSubmit={this.onJoin} className={styles.container}>\n        <div className={styles.header}>\n          register your team\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.subheader}>\n            team name\n          </div>\n          <div className={styles.inputContainer}>\n            <TextInput\n              value={this.state.team}\n              autoFocus={!isMobile}\n              onChange={(e) => this.setState({ team: e.target.value.slice(0, 35), error: '' })}\n              width=\"80%\"\n            />\n          </div>\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.subheader}>\n            player netIDs\n          </div>\n          <div className={styles.inputContainer}>\n            {this.state.ids.map((id, index) => (\n              <div className={styles.idRow} key={index}>\n                <TextInput\n                  value={id}\n                  onChange={(e) => this.changeId(e, index)}\n                  width={isMobile ? '20vw' : '9vw'}\n                />\n\n                {index + 1 === this.state.ids.length ? (\n                  <div\n                    className={classNames(styles.plus, 'fas fa-plus')}\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => this.setState({ ids: [...this.state.ids, ''] })}\n                  />\n                ) : null}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {this.state.error ? (\n          <div className={styles.errorText}>\n            {this.state.error}\n          </div>\n        ) : this.state.joinable && this.state.currentTeam && !this.state.team ? (\n          <div className={styles.next} role=\"button\" tabIndex={0} onClick={this.onRejoin}>\n            {`rejoin as: ${this.state.currentTeam}`}\n            <i className={classNames('fas fa-arrow-right', styles.arrow)} />\n          </div>\n        ) : this.state.joinable ? (\n          <div className={styles.next} role=\"button\" tabIndex={0} onClick={this.onJoin}>\n            join\n            <i className={classNames('fas fa-arrow-right', styles.arrow)} />\n          </div>\n        ) : (\n          <div className={styles.noJoin}>\n            no live game\n          </div>\n        )}\n\n        <input type=\"submit\" style={{ opacity: 0, display: 'none' }} />\n      </form>\n    );\n  }\n}\n\nPlayPage.propTypes = {\n  firebase: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(PlayPage));\n","import { randomElement } from '../../../tools/helpers';\n\nconst excuses = [\n  'studying',\n  'baking cookies',\n  'looking for keys',\n  'charging airpods',\n  'making a sandwich',\n  'integrating',\n  'differentiating',\n  'taking a nap',\n  'reading',\n  'working out',\n  'titrating',\n  'getting lunch',\n  'getting dinner',\n  'procrastinating',\n  'not paying attention',\n  '\"studying\"',\n  'browsing amazon',\n  'tweeting',\n  'talking to mom',\n  'white water rafting',\n  'practicing piano',\n  'climbing rocks',\n  'tenting',\n  'bowling',\n  'certainly not texting and driving',\n  'updating apps',\n  'unsubscribing from newsletters',\n  'waiting for pasta',\n  'waiting for the c3',\n  '3d printing',\n  'listening to a podcast',\n  'stuck on a 30s ad',\n  'making flashcards',\n  'doing math hw',\n  'doing apts',\n  'lost in perkins',\n  'getting 8 hrs of sleep',\n  'still at marketplace',\n  'calling an uber',\n  'sending venmo requests',\n  'completing two-step verification',\n  'dropping a class',\n  'searching for classes',\n  'considering a new major',\n  'reloading flex',\n  'sending streaks',\n  'watching netflix',\n  'skipping an 8:30',\n  'doing laundry',\n  'browsing tinder',\n  'burning benches',\n  'still in a lab',\n  'taking a midterm',\n  'late again',\n  'writing the questions',\n  'readying cannons',\n  'counting down',\n  'entering warp drive',\n  'starting your engines',\n  'brushing off cobwebs',\n  'ordering pizza',\n  'learning spanish',\n  'learning french',\n  'learning chinese',\n  'learning japanese',\n  'learning german',\n  'learning sign language',\n  'hacking into the system',\n  'writing an essay',\n  'coding',\n  'playing fortnite',\n  'eating pi',\n  'waiting for brian',\n  'googling answers',\n  'applying filters',\n  'doing a barrel roll',\n  'making toast',\n  'mining cryptocurrency',\n  'definitly not crashing the site',\n];\n\nexport default () => {\n  return randomElement(excuses);\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport getExcuse from './excuses';\n\nclass WaitingPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      excuse: getExcuse(),\n    };\n\n    this.firebase = props.firebase;\n    this.dbRef = this.firebase.getLiveGameRef();\n\n    this.changeExcuse = this.changeExcuse.bind(this);\n  }\n\n  componentDidMount() {\n    // listen for the first round to start or grading to be finished (standings to show)\n    // then go to answer page when it does\n    this.dbRef.on('value', (snapshot) => {\n      const stage = snapshot.val().stage;\n      if (['round1', 'round2', 'round3'].includes(stage)) {\n        this.props.history.push('/play/answer');\n      } else if (stage.includes('-') && stage.split('-')[1].includes('standings')) {\n        this.props.history.push('/play/standing');\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    // stop listening so we don't try to update this page when we're not here\n    this.dbRef.off('value');\n  }\n\n  changeExcuse() {\n    this.setState({ excuse: getExcuse() });\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.text}>\n          waiting because the host is\n        </div>\n        <div className={styles.excuseText}>\n          {this.state.excuse}\n        </div>\n\n        <div className={styles.noButton} role=\"button\" tabIndex={0} onClick={this.changeExcuse}>\n          no\n        </div>\n      </div>\n    );\n  }\n}\n\nWaitingPage.propTypes = {\n  history: PropTypes.object,\n  firebase: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(WaitingPage));\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isMobile } from 'react-device-detect';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport TextInput from '../../../components/TextInput';\n\nclass AnswerPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      answers: [],\n      stage: '',\n    };\n\n    this.firebase = props.firebase;\n    this.dbRef = this.firebase.getLiveGameRef();\n\n    this.round = '';\n\n    this.changeAnswer = this.changeAnswer.bind(this);\n  }\n\n  componentDidMount() {\n    this.firebase.getGame((res) => {\n      if (!res.success) return;\n      const game = res.data;\n      let num = 10;\n      this.round = game.stage;\n      // see if there is a bonus question for this round\n      // if so add an extra answer field\n      if (game[game.stage][10].q) {\n        num += 1;\n      }\n\n      // add an empty answer for each question\n      const answers = [];\n      for (let i = 0; i < num; i++) {\n        answers.push('');\n      }\n\n      // format the header in a long and boring way\n      let stage = '';\n      if (game.stage === 'round1') {\n        stage = 'round 1';\n      } else if (game.stage === 'round2') {\n        stage = 'round 2';\n      } else {\n        stage = 'round 3';\n      }\n\n      this.setState({ answers, stage });\n    });\n\n    // listen for the round to end\n    this.dbRef.on('value', (snapshot) => {\n      const stage = snapshot.val().stage;\n      if (['round1-grading', 'round2-grading', 'round3-grading'].includes(stage)) {\n        this.firebase.setTeamAnswers(JSON.parse(localStorage.getItem('game')).name, this.round, this.state.answers);\n        this.props.history.push('/play/waiting');\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.dbRef.off('value');\n  }\n\n  changeAnswer(e, index) {\n    const answers = [...this.state.answers];\n    answers[index] = e.target.value;\n    this.setState({ answers });\n  }\n\n  render() {\n    return this.state.answers.length > 0 ? (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          {this.state.stage}\n        </div>\n\n        {this.state.answers.map((a, index) => (\n          <div className={styles.answerContainer} key={index}>\n            {index === 10 ? (\n              <i className={classNames('fas fa-star', styles.answerNum)} />\n            ) : (\n              <div className={styles.answerNum}>\n                {index + 1}\n              </div>\n            )}\n\n            <TextInput\n              placeholder=\"answer\"\n              value={a}\n              onChange={(e) => this.changeAnswer(e, index)}\n              width={isMobile ? '80%' : '50%'}\n            />\n          </div>\n        ))}\n      </div>\n    ) : null;\n  }\n}\n\nAnswerPage.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(AnswerPage));\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport { getPlaceText } from '../../../tools/helpers';\n\nclass StandingPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      place: 1,\n      score: 0,\n      diff: 0,\n      diffTeam: '',\n      tied: false,\n      stage: '',\n    };\n\n    this.firebase = props.firebase;\n    this.dbRef = this.firebase.getLiveGameRef();\n  }\n\n  componentDidMount() {\n    this.firebase.getGame((res) => {\n      if (!res.success) return;\n      const game = res.data;\n      // create a standings array\n      const standings = Object.entries(game.teams).map(([name, data]) => ({\n        name,\n        score: data.score,\n        place: 1,\n      }));\n\n      // sort the array by score\n      standings.sort((a, b) => (b.score - a.score));\n\n      // set the places, including ties\n      let currentPlace = 1;\n      for (let i = 1; i < standings.length; i++) {\n        if (standings[i].score < standings[i - 1].score) {\n          currentPlace += 1;\n        }\n        standings[i].place = currentPlace;\n      }\n\n      // once we know the standings, get the user's index in the standings\n      const index = standings.map((s) => (s.name)).indexOf(JSON.parse(localStorage.getItem('game')).name);\n\n      // from this get their place and score\n      const place = standings[index].place;\n      const score = standings[index].score;\n\n      // we now want to find how far ahead (if in 1st) or behind (otherwise) they are\n      // also track what team we are ahead of or behind\n      let diff = 0;\n      let diffTeam = '';\n      let counter = index;\n      // we'll break out of it ourselves because we want to check after changing counter\n      while (true) {\n        // if in 1st, count backwards, otherwise count towards 1st\n        if (place === 1) {\n          counter += 1;\n        } else {\n          counter -= 1;\n        }\n\n        // if everyone is tied or only 1 team, just don't show diff\n        // true because out of bounds for standings indices\n        if (counter < 0 || counter >= standings.length) {\n          diff = 0;\n          break;\n        }\n\n        // if the score is different, find out what the difference is and with who\n        if (standings[counter].score !== score) {\n          diff = Math.abs(standings[counter].score - score);\n          diffTeam = standings[counter].name;\n          break;\n        }\n      }\n\n      // display the user's standing\n      // stage will either be standings or final standings\n      this.setState({\n        place,\n        score,\n        diff,\n        diffTeam,\n        // if someone else shares the place with us, we're tied\n        tied: standings.filter((s) => (s.place === place)).length > 1,\n        stage: game.stage.split('-')[1],\n      });\n    });\n\n    // listen for a round to start, then go to answer page when it does\n    this.dbRef.on('value', (snapshot) => {\n      const stage = snapshot.val().stage;\n      if (['round2', 'round3'].includes(stage)) {\n        this.props.history.push('/play/answer');\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    // stop listening so we don't try to update this page when we're not here\n    this.dbRef.off('value');\n  }\n\n  render() {\n    return this.state.stage ? (\n      <div className={styles.container}>\n        <div className={styles.placeText}>\n          {`${this.state.stage === 'final standings' ? 'you finished' : \"you're\"} ${this.state.tied ? 'tied for' : 'in'} ${this.state.place}${getPlaceText(this.state.place)} place with ${this.state.score} ${this.state.score === 1 ? 'correct' : 'corrects'}`}\n        </div>\n        <div className={styles.descText}>\n          {this.state.diff === 0 ? 'tied with everyone else' : `${this.state.diff} ${this.state.diff === 1 ? 'correct' : 'corrects'} ${this.state.place === 1 ? 'ahead of' : 'behind'} ${this.state.diffTeam}`}\n        </div>\n      </div>\n    ) : null;\n  }\n}\n\nStandingPage.propTypes = {\n  history: PropTypes.object,\n  firebase: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(StandingPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.css';\n\nconst Loader = ({ margin }) => {\n  return (\n    <div className={styles.holder} style={{ margin }}>\n      <div className={styles.bounce1} />\n      <div className={styles.bounce2} />\n      <div className={styles.bounce3} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  margin: PropTypes.string,\n};\n\nexport default Loader;\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport jwt from 'jsonwebtoken';\nimport { isMobile } from 'react-device-detect';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport TextInput from '../../../components/TextInput';\nimport Loader from '../../../components/Loader';\nimport { isAuth } from '../../../tools/helpers';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      error: '',\n      loading: false,\n      loggedIn: false,\n    };\n\n    this.firebase = props.firebase;\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  componentDidMount() {\n    // if already logged in, go right to the dashboard\n    isAuth(localStorage.getItem('token'), (res) => {\n      this.setState({ loggedIn: res.success });\n    });\n  }\n\n  onLogin(e) {\n    // necessary because forms reload the page on submission by default\n    e.preventDefault();\n    // show the loading icon\n    this.setState({ loading: true });\n\n    // try to sign in with firebase\n    this.firebase.signInWithEmail(this.state.email, this.state.password, (res) => {\n      // if it works, give the user a signed jwt\n      // then send them to the dashboard\n      if (res.success) {\n        // expires in sets length of authentication in ms\n        // currently lasts 5 days\n        jwt.sign({ user: res.msg }, process.env.REACT_APP_JWT_SECRET, { expiresIn: 60 * 60 * 24 * 5 }, (error, token) => {\n          if (error) {\n            this.setState({ error });\n          } else {\n            localStorage.setItem('token', token);\n            this.props.history.push('/admin/dashboard');\n          }\n        });\n      } else {\n        // otherwise show the error, and make sure to stop loading\n        // the error goes away when the user changes their input\n        this.setState({\n          error: res.msg,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      return <Redirect to=\"/admin/dashboard\" />\n    }\n\n    return (\n      <div className={styles.container}>\n        <form onSubmit={this.onLogin} className={styles.form}>\n          <div className={styles.header}>\n            login\n          </div>\n\n          <div className={styles.subheader}>\n            email\n          </div>\n          <TextInput\n            value={this.state.email}\n            onChange={(e) => this.setState({ email: e.target.value, error: '' })}\n            width=\"80%\"\n            autoFocus={!isMobile}\n          />\n\n          <div className={styles.subheader}>\n            password\n          </div>\n          <TextInput\n            value={this.state.password}\n            onChange={(e) => this.setState({ password: e.target.value, error: '' })}\n            width=\"80%\"\n            type=\"password\"\n          />\n\n          {this.state.loading ? (\n            <Loader margin=\"35px auto 25px auto\" />\n          ) : this.state.error ? (\n            <div className={styles.error}>\n              {this.state.error}\n            </div>\n          ) : (\n            <input\n              type=\"submit\"\n              value=\"let's go\"\n              className={styles.button}\n              tabIndex={0}\n            />\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(LoginPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isMobile } from 'react-device-detect';\n\nimport styles from './styles.module.css';\nimport Loader from '../Loader';\nimport TextInput from '../TextInput';\n\nconst PopUp = ({ text, buttonOne, buttonTwo, loading, inputValue, inputChange, inputPlaceholder }) => {\n  return (\n    <div className={styles.modal}>\n      <div className={styles.container}>\n        <div className={styles.text}>\n          {text}\n        </div>\n\n        {loading ? (\n          <Loader margin=\"30px auto 25px auto\" />\n        ) : (\n          <div className={styles.bottomHolder}>\n            {inputValue !== undefined ? (\n              <TextInput\n                placeholder={inputPlaceholder}\n                onChange={inputChange}\n                value={inputValue}\n                autoFocus={!isMobile}\n                width=\"80%\"\n              />\n            ) : null}\n\n            <div className={styles.buttonContainer}>\n              <div className={styles.button} role=\"button\" tabIndex={0} onClick={buttonOne.onClick}>\n                {buttonOne.text}\n              </div>\n\n              {buttonTwo ? (\n                <div className={styles.button} role=\"button\" tabIndex={0} onClick={buttonTwo.onClick}>\n                  {buttonTwo.text}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPopUp.propTypes = {\n  text: PropTypes.string,\n  buttonOne: PropTypes.shape({\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  buttonTwo: PropTypes.shape({\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  loading: PropTypes.bool,\n  inputValue: PropTypes.string,\n  inputChange: PropTypes.func,\n  inputPlaceholder: PropTypes.string,\n};\n\nexport default PopUp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport ReactTooltip from 'react-tooltip';\nimport { isMobile } from 'react-device-detect';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport PopUp from '../../../components/PopUp';\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quizzes: [],\n      creating: false,\n      createText: '',\n      loading: false,\n      deleteId: '',\n      isLiveGame: false,\n    };\n\n    this.firebase = props.firebase;\n\n    this.onCreate = this.onCreate.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.loadQuizzes = this.loadQuizzes.bind(this);\n    this.loadLiveGame = this.loadLiveGame.bind(this);\n    this.hostGame = this.hostGame.bind(this);\n  }\n\n  componentDidMount() {\n    // see if there is a live game we can reload\n    this.firebase.getGame((response) => {\n      if (response.success && response.data.stage !== 'round3-final standings') {\n        this.setState({ isLiveGame: true });\n      };\n    });\n    // get our created quizzes\n    this.loadQuizzes();\n  }\n\n  // creates a new quiz and opens the page to edit it\n  onCreate() {\n    this.setState({ loading: true });\n    this.firebase.createQuiz(this.state.createText, (id) => {\n      this.props.history.push(`/admin/edit/${id}`);\n    });\n  }\n\n  // deletes the quiz\n  onDelete() {\n    this.setState({ loading: true });\n    this.firebase.deleteQuiz(this.state.deleteId, () => {\n      this.setState({ loading: false, deleteId: '' });\n      this.loadQuizzes();\n    });\n  }\n\n  // gets the current quizzes from the database\n  loadQuizzes() {\n    this.firebase.getQuizzes((quizzes) => {\n      this.setState({ quizzes });\n    });\n  }\n\n  // hosts the current live game by going to a page based on the stage\n  loadLiveGame() {\n    this.firebase.getGame((response) => {\n      if (response.success) {\n        const stage = response.data.stage;\n        // make sure there is a stage, should always be there, but just to be safe\n        if (!stage) return;\n        // make sure game still isn't over\n        if (stage === 'round3-final standings') {\n          this.setState({ isLiveGame: false });\n          return;\n        }\n        // go to join page if we are still joining\n        if (stage === 'join') {\n          this.props.history.push('/host/join');\n          return;\n        }\n        // otherwise, the stage is separate by - with the info we need\n        const stageInfo = stage.split('-');\n        // if it is not split, then we are on the question phase\n        if (stageInfo.length === 1) {\n          this.props.history.push('/host/question/1');\n          return;\n        }\n        // otherwise, we are either grading or in the standing phase\n        if (stageInfo[1] === 'grading') {\n          this.props.history.push('/host/grading');\n        } else {\n          this.props.history.push('/host/standings');\n        }\n      }\n    });\n  }\n\n  hostGame(gameId) {\n    // refresh the realtime db with this new host\n    this.firebase.hostQuiz(gameId);\n    // go to the host page\n    this.props.history.push('/host/join');\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          dashboard\n        </div>\n\n        <div\n          className={styles.createContainer}\n          role=\"button\"\n          tabIndex={0}\n          onClick={() => this.setState({ creating: true, createText: '' })}\n        >\n          <i className={classNames('fas fa-plus', styles.createIcon)} />\n          <div className={styles.createText}>\n            create new quiz\n          </div>\n        </div>\n\n        {this.state.isLiveGame ? (\n          <div\n            className={styles.liveGameButton}\n            role=\"button\"\n            tabIndex={0}\n            onClick={this.loadLiveGame}\n          >\n            <div className={styles.liveGameText}>\n              resume live game\n            </div>\n          </div>\n        ) : null}\n\n        <div className={styles.quizzesContainer}>\n          {this.state.quizzes.map((q) => (\n            <div className={styles.quizHolder} key={q.id}>\n              <div className={styles.quizContainer}>\n                {q.data.name}\n              </div>\n\n              <div className={styles.quizButtonContainer}>\n                {!isMobile ? <ReactTooltip place=\"top\" effect=\"solid\" className={styles.tooltip} /> : null}\n                <Link\n                  className={classNames('fas fa-pencil-alt', styles.quizButton)}\n                  data-tip=\"edit\"\n                  to={`/admin/edit/${q.id}`}\n                />\n                <i\n                  className={classNames('fas fa-play', styles.quizButton)}\n                  data-tip=\"host\"\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => this.hostGame(q.id)}\n                />\n                <i\n                  className={classNames('fas fa-trash-alt', styles.quizButton)}\n                  data-tip=\"delete\"\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => this.setState({ deleteId: q.id })}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {this.state.creating ? (\n          <PopUp\n            text=\"enter a title for the new quiz pls\"\n            buttonOne={{\n              text: 'create',\n              onClick: this.onCreate,\n            }}\n            buttonTwo={{\n              text: 'nvm',\n              onClick: () => this.setState({ creating: false }),\n            }}\n            loading={this.state.loading}\n            inputValue={this.state.createText}\n            inputChange={(e) => this.setState({ createText: e.target.value })}\n            inputPlaceholder=\"title\"\n          />\n        ) : this.state.deleteId ? (\n          <PopUp\n            text=\"do you really want to say goodbye to this quiz?\"\n            buttonOne={{\n              text: 'yeh',\n              onClick: this.onDelete,\n            }}\n            buttonTwo={{\n              text: 'nooo!',\n              onClick: () => this.setState({ deleteId: '' }),\n            }}\n            loading={this.state.loading}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nDashboardPage.propTypes = {\n  history: PropTypes.object,\n  firebase: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(DashboardPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport isImageUrl from 'is-image-url';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport TextInput from '../../../components/TextInput';\nimport Loader from '../../../components/Loader';\nimport PopUp from '../../../components/PopUp';\n\nclass EditPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quiz: {},\n      redirect: false,\n      round: 'round1',\n      saving: false,\n      editTitle: false,\n      showImageModal: false,\n      imageUrl: '',\n      imageIndex: 0,\n      uploadingImage: false,\n      uploadError: false,\n    };\n\n    this.id = props.match.params.id;\n    this.firebase = props.firebase;\n\n    this.setValue = this.setValue.bind(this);\n    this.setTitle = this.setTitle.bind(this);\n    this.save = this.save.bind(this);\n    this.uploadImage = this.uploadImage.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n  }\n\n  componentDidMount() {\n    this.firebase.getQuiz(this.id, (res) => {\n      if (!res.success) {\n        this.setState({ redirect: true });\n      } else {\n        this.setState({ quiz: res.data });\n      }\n    });\n  }\n\n  setValue(e, type, index) {\n    const quiz = JSON.parse(JSON.stringify(this.state.quiz));\n    const round = quiz[this.state.round];\n    if (type === 'q') {\n      round[index].q = e.target.value;\n    } else if (type === 'a') {\n      round[index].a = e.target.value;\n    } else {\n      round[index].pts = Math.max(e.target.value, 0);\n    }\n    this.setState({ quiz });\n  }\n\n  setTitle(e) {\n    const quiz = JSON.parse(JSON.stringify(this.state.quiz));\n    quiz.name = e.target.value;\n    this.setState({ quiz });\n  }\n\n  save(next) {\n    this.setState({ saving: true });\n    // our callback is actually to call the function here that will\n    // call this functions callback/next function\n    this.firebase.saveQuiz(this.id, this.state.quiz, () => next());\n  }\n\n  uploadImage() {\n    this.setState({ uploadingImage: true });\n    // make sure we are uploading an image to the game\n    if (!isImageUrl(this.state.imageUrl)) {\n      this.setState({ uploadingImage: false, uploadError: true });\n      return;\n    }\n    // upload the image\n    this.firebase.uploadImage(this.state.imageUrl, (url, id) => {\n      if (!url) {\n        this.setState({ uploadingImage: false, uploadError: true });\n        return;\n      }\n      // update our quiz with the image\n      const quiz = JSON.parse(JSON.stringify(this.state.quiz));\n      const round = quiz[this.state.round];\n      round[this.state.imageIndex].img = url;\n      round[this.state.imageIndex].imgId = id;\n      // we save immediately because we uploaded the image\n      this.setState({\n        quiz,\n        showImageModal: false,\n        uploadingImage: false,\n      }, () => this.save(() => this.setState({ saving: false, })));\n    });\n  }\n\n  removeImage(index) {\n    // get the quiz\n    const quiz = JSON.parse(JSON.stringify(this.state.quiz));\n    const round = quiz[this.state.round];\n    // delete the image from the database\n    this.firebase.removeImage(round[index].imgId);\n    // we don't need to wait, just remove the image from our quiz\n    round[index].img = '';\n    round[index].imgId = '';\n    // save immediately because we just delted it from storage\n    this.setState({ quiz, showImageModal: false }, () => this.save(() => this.setState({ saving: false })));\n  }\n\n  render() {\n    if (!this.id || this.state.redirect) {\n      return <Redirect to=\"/admin/dashboard\" />\n    }\n\n    return this.state.quiz.name !== undefined ? (\n      <div className={styles.container}>\n        <div className={styles.headerContainer}>\n          <div className={styles.header}>\n            {this.state.quiz.name}\n          </div>\n\n          {this.state.saving ? (\n            <div className={styles.buttonContainer}>\n              <Loader margin=\"auto\" />\n            </div>\n          ) : (\n            <div className={styles.buttonContainer}>\n              <div\n                className={styles.button}\n                role=\"button\"\n                tabIndex={0}\n                onClick={() => this.setState({ editTitle: true })}\n              >\n                <i className={classNames('fas fa-pencil-alt', styles.buttonIcon)} />\n                <div className={styles.buttonText}>\n                  edit title\n                </div>\n              </div>\n\n              <div\n                className={styles.button}\n                role=\"button\"\n                tabIndex={0}\n                onClick={() => this.save(() => this.setState({ saving: false }))}\n              >\n                <i className={classNames('fas fa-save', styles.buttonIcon)} />\n                <div className={styles.buttonText}>\n                  save\n                </div>\n              </div>\n\n              <div\n                className={styles.button}\n                role=\"button\"\n                tabIndex={0}\n                onClick={() => this.save(() => this.props.history.push('/admin/dashboard'))}\n                style={{ marginRight: 0 }}\n              >\n                <i className={classNames('fas fa-running', styles.buttonIcon)} />\n                <div className={styles.buttonText}>\n                  {'save & exit'}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className={styles.roundContainer}>\n          <div\n            className={classNames(styles.round, { [styles.selected]: this.state.round === 'round1' })}\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => this.setState({ round: 'round1' })}\n          >\n            round 1\n          </div>\n          <div\n            className={classNames(styles.round, { [styles.selected]: this.state.round === 'round2' })}\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => this.setState({ round: 'round2' })}\n          >\n            round 2\n          </div>\n          <div\n            className={classNames(styles.round, { [styles.selected]: this.state.round === 'round3' })}\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => this.setState({ round: 'round3' })}\n          >\n            round 3\n          </div>\n        </div>\n\n        {this.state.quiz[this.state.round].map((data, index) => (\n          <div className={styles.questionContainer} key={index}>\n            {index === 10 ? (\n              <i className={classNames('fas fa-star', styles.questionNum)} />\n            ) : (\n              <div className={styles.questionNum}>\n                {index + 1}\n              </div>\n            )}\n\n            <div className={styles.inputsContainer}>\n              <div className={styles.inputContainer}>\n                <div className={styles.inputText}>\n                  q:\n                </div>\n                <TextInput\n                  placeholder=\"question\"\n                  value={this.state.quiz[this.state.round][index].q}\n                  onChange={(e) => this.setValue(e, 'q', index)}\n                  width=\"100%\"\n                />\n              </div>\n\n              <div className={styles.inputContainer}>\n                <div className={styles.inputText}>\n                  a:\n                </div>\n                <TextInput\n                  placeholder=\"answer\"\n                  value={this.state.quiz[this.state.round][index].a}\n                  onChange={(e) => this.setValue(e, 'a', index)}\n                  width=\"100%\"\n                />\n              </div>\n            </div>\n\n            <div className={styles.centeredRow}>\n              <div className={styles.pointsContainer}>\n                <TextInput\n                  value={this.state.quiz[this.state.round][index].pts}\n                  onChange={(e) => this.setValue(e, 'pts', index)}\n                  type=\"number\"\n                  width=\"100%\"\n                  customStyle={{\n                    fontSize: '34px',\n                    lineHeight: '34px',\n                    fontWeight: 'bold',\n                    textAlign: 'center',\n                  }}\n                />\n                <div className={styles.pointsText}>\n                  {this.state.quiz[this.state.round][index].pts === 1 ? 'point' : 'points'}\n                </div>\n              </div>\n\n              <div className={styles.imageContainer}>\n                {this.state.quiz[this.state.round][index].img ? (\n                  <div className={styles.imageContainer}>\n                    <img src={this.state.quiz[this.state.round][index].img} alt=\"Question\" className={styles.image} />\n                    <i className={classNames(styles.deleteImage, 'fas fa-times')} role=\"button\" tabIndex={0} onClick={() => this.removeImage(index)} />\n                  </div>\n                ) : (\n                  <div\n                    className={styles.imageButton}\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => this.setState({ showImageModal: true, imageIndex: index, imageUrl: '' })}\n                  >\n                    <i className={classNames(styles.imageIcon, 'far fa-image')} />\n                    <div className={styles.imageText}>\n                      add image\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n\n        {this.state.editTitle ? (\n          <PopUp\n            text=\"fine, change the title...\"\n            buttonOne={{\n              text: 'cool',\n              onClick: () => this.save(() => this.setState({ saving: false, editTitle: false })),\n            }}\n            loading={this.state.saving}\n            inputValue={this.state.quiz.name}\n            inputChange={this.setTitle}\n            inputPlaceholder=\"title\"\n          />\n        ) : this.state.showImageModal ? (\n          <PopUp\n            text={this.state.uploadError ? \"we couldn't find the image at that url...\" : 'give me image url, now...'}\n            buttonOne={{\n              text: 'add',\n              onClick: this.uploadImage,\n            }}\n            buttonTwo={{\n              text: 'nvm',\n              onClick: () => this.setState({ showImageModal: false })\n            }}\n            loading={this.state.uploadingImage}\n            inputValue={this.state.imageUrl}\n            inputChange={(e) => this.setState({ imageUrl: e.target.value, uploadError: false, })}\n            inputPlaceholder=\"image url\"\n          />\n        ) : null}\n      </div>\n    ) : null;\n  }\n}\n\nEditPage.propTypes = {\n  match: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(EditPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport DukeNiteLogo from '../../../assets/DukeNiteLogo.png';\n\nclass HostPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      teams: [],\n    };\n\n    this.firebase = props.firebase;\n    this.dbRef = this.firebase.getLiveGameRef();\n\n    this.start = this.start.bind(this);\n  }\n\n  componentDidMount() {\n    // listen for new teams to join\n    this.dbRef.on('value', (snapshot) => {\n      this.setState({ teams: snapshot.val().teams ? Object.keys(snapshot.val().teams) : [] });\n    });\n  }\n\n  componentWillUnmount() {\n    // stop listening so we don't try to update this page when we're not here\n    this.dbRef.off('value');\n  }\n\n  // tell everyone its the first round and show the first question\n  start() {\n    this.firebase.setStage('round1', () => {\n      this.props.history.push('/host/question/1');\n    });\n  }\n\n  render() {\n    // TODO: change join/play url\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.headerRow}>\n          <img src={DukeNiteLogo} alt=\"Duke@Nite\" className={styles.logo} />\n          <div className={styles.headerText}>\n            trivia night\n          </div>\n        </div>\n\n        <div className={styles.startButton} role=\"button\" tabIndex={0} onClick={this.start}>\n          start\n          <i className={classNames('fas fa-arrow-right', styles.arrow)} />\n        </div>\n\n        <div className={styles.instructText}>\n          join at&nbsp;<u>localhost:3000/play</u>\n        </div>\n\n        <div className={styles.teamsContainer}>\n          {this.state.teams.map((t) => (\n            <div className={styles.team} key={t}>\n              {t}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nHostPage.propTypes = {\n  firebase: PropTypes.object,\n};\n\nexport default withFirebase(HostPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Textfit } from 'react-textfit';\n\nimport styles from './styles.module.css';\nimport DukeNiteLogo from '../../../assets/DukeNiteLogo.png';\nimport { withFirebase } from '../../../components/Firebase/firebase';\n\nclass HostQuestionPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      qnum: parseInt(props.match.params.qnum),\n      roundNum: 1,\n      question: {},\n      questions: [],\n    };\n\n    this.firebase = props.firebase;\n\n    this.stage = '';\n\n    this.endRound = this.endRound.bind(this);\n  }\n\n  componentDidMount() {\n    // get the questions from the realtime db\n    // we'll use these questions for the whole round because this page\n    // will never fully reload\n    this.firebase.getGame((res) => {\n      if (!res.success) return;\n      const game = res.data;\n      // filter out the bonus if it doesn't exist\n      const questions = game[game.stage].filter((q) => (q.q !== ''));\n      // redirect if invalid question number\n      if (!this.state.qnum || this.state.qnum > questions.length) {\n        this.props.history.push('/admin/dashboard');\n        return;\n      };\n      // for ending the round later\n      this.stage = game.stage;\n      this.setState({\n        question: questions[this.state.qnum - 1],\n        questions,\n        roundNum: game.stage.substring(game.stage.length - 1, game.stage.length),\n      });\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // if the qnum changes, change the question\n    // we do this because the page will not automatically rerender when qnum changes\n    const newQnum = parseInt(nextProps.match.params.qnum);\n    if (newQnum !== prevState.qnum) {\n      return {\n        qnum: newQnum,\n        question: prevState.questions[newQnum - 1],\n      };\n    } else {\n      return prevState;\n    }\n  }\n\n  endRound() {\n    this.firebase.setStage(`${this.stage}-grading`, () => {\n      this.props.history.push('/host/grading');\n    });\n  }\n\n  render() {\n    if (!this.state.qnum) {\n      return <Redirect to=\"/admin/login\" />;\n    }\n\n    return this.state.questions.length > 0 ? (\n      <div className={styles.container}>\n        <img src={DukeNiteLogo} alt=\"Duke@Nite Logo\" className={styles.logo} draggable={false} />\n        <div className={styles.header}>\n          {`round ${this.state.roundNum}: `}\n          {this.state.qnum === 11 ? 'bonus question' : `question ${this.state.qnum}`}\n        </div>\n\n        <div className={styles.questionContainer}>\n          {this.state.question.img ? (\n            <img src={this.state.question.img} alt=\"Question\" className={styles.questionImage} draggable={false} />\n          ) : null}\n\n          {this.state.question.q ? (\n            <Textfit\n              className={styles.questionText}\n              style={{ width: this.state.question.img ? '48vw' : '80vw', height: this.state.question.img ? '70vh' : '60vh' }}\n              mode=\"multi\"\n              max={70}\n            >\n              {this.state.question.q}\n            </Textfit>\n          ) : null}\n        </div>\n\n        {this.state.qnum === this.state.questions.length ? (\n          <div className={styles.nextButton} role=\"button\" tabIndex={0} onClick={this.endRound} style={{ right: '3vw', bottom: '3vh' }}>\n            end round\n            <i className={classNames('fas fa-arrow-right', styles.arrow)} />\n          </div>\n        ) : (\n          <Link className={styles.nextButton} to={`/host/question/${this.state.qnum + 1}`} style={{ right: '3vw', bottom: '3vh' }}>\n            next\n            <i className={classNames('fas fa-arrow-right', styles.arrow)} />\n          </Link>\n        )}\n\n        {this.state.qnum !== 1 ? (\n          <Link\n            className={styles.nextButton}\n            to={`/host/question/${this.state.qnum - 1}`}\n            style={{ left: '3vw', bottom: '3vh' }}\n          >\n            <i className={classNames('fas fa-arrow-left', styles.arrow)} />\n            back\n          </Link>\n        ) : null}\n      </div>\n    ) : null;\n  }\n}\n\nHostQuestionPage.propTypes = {\n  match: PropTypes.object,\n  firebase: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(HostQuestionPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport TextInput from '../../../components/TextInput';\nimport styles from './styles.module.css';\n\nclass GradingPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: [],\n      teams: {},\n      teamNames: [],\n      currentTeamNum: -1,\n      teamCorrects: [],\n      round: '',\n      showQuestion: -1,\n    };\n\n    this.firebase = props.firebase;\n\n    this.currentRoundTeamScores = [];\n\n    this.changeGrade = this.changeGrade.bind(this);\n    this.nextTeam = this.nextTeam.bind(this);\n  }\n\n  componentDidMount() {\n    // give time for clients' answers to get submitted\n    this.timeout = setTimeout(() => {\n      // get the round, questions, and teams to grade\n      this.firebase.getGame((res) => {\n        if (!res.success) return;\n        const game = res.data;\n        // get the round from stage, ex. round1-grading => round1\n        const round = game.stage.split('-')[0];\n        this.setState({\n          // filter out no bonus\n          questions: game[round].filter((q) => (q.q !== '')),\n          teams: game.teams,\n          teamNames: Object.keys(game.teams),\n          currentTeamNum: 0,\n          // 11 false in case of bonus, only will display ten if no, and last false will not matter\n          teamCorrects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n          round,\n        }, () => {\n          // select the first input after each question\n          const input = document.getElementById('id0');\n          setTimeout(() => {\n            input.select();\n          }, 0);\n        });\n      });\n    }, 2000);\n  }\n\n  // just saving this because it might be better than that derived state thing on question page\n  // componentDidUpdate(prevProps) {\n  //   if (prevProps.match.params.team === this.props.match.params.team) {\n  //     return;\n  //   }\n\n  //   this.setState({\n  //     corrects: [false, false, false, false, false, false, false, false, false, false]\n  //   });\n  // }\n\n  componentWillUnmount() {\n    // have to clear every timeout we use just in case it doesn't finish\n    clearTimeout(this.timeout);\n  }\n\n  // points values in val\n  changeGrade(i, val) {\n    const teamCorrects = [...this.state.teamCorrects];\n    teamCorrects[i] = val;\n    this.setState({ teamCorrects });\n  }\n\n  nextTeam(e) {\n    e.preventDefault();\n\n    // add points for each answer\n    // reduce just sums up all points given for each question\n    this.currentRoundTeamScores.push(this.state.teamCorrects.reduce((accumulator, currentValue) => (accumulator + currentValue)));\n\n    const currentTeamNum = this.state.currentTeamNum + 1;\n    // keep repeating if we have teams left\n    if (currentTeamNum < this.state.teamNames.length) {\n      // select the first input after each question\n      const input = document.getElementById('id0');\n      setTimeout(() => {\n        input.select();\n      }, 0);\n      // set next team\n      this.setState({\n        teamCorrects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        currentTeamNum,\n      }, () => window.scrollTo(0, 0));\n    } else {\n      // otherwise save the scores\n      const teams = JSON.parse(JSON.stringify(this.state.teams));\n      for (let i = 0; i < this.state.teamNames.length; i++) {\n        const name = this.state.teamNames[i];\n        // add to the current score if possible\n        let score = teams[name].score || 0;\n        score += this.currentRoundTeamScores[i];\n        teams[name].score = score;\n      }\n\n      // after setting standings, then go to the leaderboard/standings page\n      // callback makes sure standings are set before we try to show them\n      this.firebase.setStandings(teams, this.state.round, () => {\n        this.props.history.push('/host/standings');\n      });\n    }\n  }\n\n  render() {\n    // TODO: mobile styling support\n\n    return this.state.questions.length > 0 ? (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          {`team ${this.state.currentTeamNum + 1}/${this.state.teamNames.length}`}\n        </div>\n\n        <div className={styles.headerContainer}>\n          <div className={styles.subheader}>\n            actual answer\n          </div>\n          <div className={styles.subheader}>\n            team answer\n          </div>\n        </div>\n\n        <form onSubmit={this.nextTeam}>\n          <div className={styles.gradingContainer}>\n            <div className={styles.divider} />\n\n            {this.state.questions.map((q, i) => (\n              <div key={i}>\n                <div className={styles.gradeContainer}>\n                  <div className={styles.showButton} role=\"button\" tabIndex={1} onClick={() => this.setState({ showQuestion: i })}>\n                    <i className={classNames(styles.questionIcon, 'fas fa-question')} />\n                    <div className={styles.viewText}>\n                      View\n                    </div>\n                  </div>\n\n                  <div className={styles.answer}>\n                    {q.a}\n                  </div>\n                  <div className={styles.answer} style={{ marginLeft: '5vw' }}>\n                    {this.state.teams[this.state.teamNames[this.state.currentTeamNum]][this.state.round]\n                      && this.state.teams[this.state.teamNames[this.state.currentTeamNum]][this.state.round][i]\n                        ? this.state.teams[this.state.teamNames[this.state.currentTeamNum]][this.state.round][i] : 'no answer'}\n                  </div>\n\n                  <div className={styles.pointsContainer}>\n                    <TextInput\n                      value={this.state.teamCorrects[i]}\n                      onChange={(e) => this.changeGrade(i, Math.min(e.target.value, q.pts))}\n                      type=\"number\"\n                      width=\"6vw\"\n                      id={`id${i}`}\n                      customStyle={{\n                        fontSize: '3vw',\n                        lineHeight: '3vw',\n                        fontWeight: 'bold',\n                        textAlign: 'center',\n                      }}\n                    />\n                    <div className={styles.pointsText}>\n                      {`/ ${q.pts}`}\n                    </div>\n                  </div>\n                </div>\n\n                <div className={styles.divider} />\n              </div>\n            ))}\n          </div>\n\n          <div\n            className={styles.nextButton}\n            role=\"button\"\n            tabIndex={0}\n            onClick={this.nextTeam}\n            style={{ right: '3vw', bottom: '3vh' }}\n          >\n            {this.state.currentTeamNum + 1 < this.state.teamNames.length ? 'next' : 'standings'}\n            <i className={classNames('fas fa-arrow-right', styles.arrow)} />\n          </div>\n          <input type=\"submit\" style={{ opacity: 0, display: 'none' }} />\n        </form>\n\n        {this.state.showQuestion !== -1 ? (\n          <div className={styles.modal}>\n            <div className={styles.popUp}>\n              {this.state.questions[this.state.showQuestion].img ? (\n                <img src={this.state.questions[this.state.showQuestion].img} alt=\"Question\" className={styles.showImage} />\n              ) : null}\n              <div className={styles.showText}>\n                {this.state.questions[this.state.showQuestion].q}\n              </div>\n              <i className={classNames('fas fa-times', styles.closeIcon)} role=\"button\" tabIndex={0} onClick={() => this.setState({ showQuestion: -1 })} />\n            </div>\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n}\n\nGradingPage.propTypes = {\n  match: PropTypes.object,\n  firebase: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(GradingPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Textfit } from 'react-textfit';\nimport classNames from 'classnames';\nimport ReactTooltip from 'react-tooltip';\n\nimport styles from './styles.module.css';\nimport DukeNiteLogo from '../../../assets/DukeNiteLogo.png';\nimport { withFirebase } from '../../../components/Firebase/firebase';\nimport { getIdsText } from '../../../tools/helpers';\n\nclass StandingsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      standings: [],\n      stage: '',\n    };\n\n    this.firebase = props.firebase;\n    this.round = '';\n\n    this.nextRound = this.nextRound.bind(this);\n  }\n\n  componentDidMount() {\n    this.firebase.getGame((res) => {\n      if (!res.success || !res.data) return;\n      const game = res.data;\n      // create a standings array\n      const standings = Object.entries(game.teams).map(([name, data]) => ({\n        name,\n        score: data.score,\n        ids: data.ids,\n        place: 1,\n      }));\n\n      // sort the array by score\n      standings.sort((a, b) => (b.score - a.score));\n\n      // set the places, including ties\n      let place = 1;\n      for (let i = 1; i < standings.length; i++) {\n        if (standings[i].score < standings[i - 1].score) {\n          place += 1;\n        }\n        standings[i].place = place;\n      }\n\n      // display the standings\n      // this.state.stage will either be standings or final standings\n      // this.round is used to start next round\n      const stage = game.stage.split('-');\n      this.round = stage[0];\n      this.setState({\n        standings,\n        stage: stage[1],\n      });\n    });\n  }\n\n  nextRound() {\n    this.firebase.setStage(`round${parseInt(this.round.slice(-1)) + 1}`, () => {\n      this.props.history.push('/host/question/1');\n    });\n  }\n\n  render() {\n    // not really supported on mobile\n\n    return this.state.stage ? (\n      <div className={styles.container}>\n        <div className={styles.headerRow}>\n          <div className={styles.headerText}>\n            {this.state.stage}\n          </div>\n          <img src={DukeNiteLogo} alt=\"Duke@Nite\" className={styles.headerLogo} />\n        </div>\n\n        <div className={styles.divider} style={{ width: '60vw' }} />\n\n        {this.state.stage !== 'final standings' ? (\n          <div className={styles.nextButton} role=\"button\" tabIndex={0} onClick={this.nextRound}>\n            next round\n            <i className={classNames('fas fa-arrow-right', styles.arrow)} />\n          </div>\n        ) : null}\n\n        {this.state.standings.filter((s, i) => (i < 5)).map((s, i) => (\n          <div className={styles.standingsHolder} key={s.name} style={{ marginBottom: i !== this.state.standings.length - 1 ? 0 : 'auto' }}>\n            <ReactTooltip place=\"top\" effect=\"solid\" className={styles.tooltip} />\n            <div className={styles.standingContainer} data-tip={getIdsText(s.ids)}>\n              <div className={styles.placeText}>\n                {s.place}\n              </div>\n\n              <Textfit className={styles.nameText} mode=\"single\" forceSingleModeWidth={false} max={32}>\n                {s.name}\n              </Textfit>\n\n              <div className={styles.scoreText}>\n                {s.score}\n              </div>\n            </div>\n\n            {i !== this.state.standings.length - 1 ? (\n              <div className={styles.divider} />\n            ) : null}\n          </div>\n        ))}\n      </div>\n    ) : null;\n  }\n}\n\nStandingsPage.propTypes = {\n  firebase: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default withRouter(withFirebase(StandingsPage));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Firebase, { FirebaseContext } from './components/Firebase/firebase';\nimport AdminRoute from './tools/AdminRoute';\nimport GameRoute from './tools/GameRoute';\n\nimport HomePage from './containers/HomePage';\nimport PlayPage from './containers/client/PlayPage';\nimport WaitingPage from './containers/client/WaitingPage';\nimport AnswerPage from './containers/client/AnswerPage';\nimport PlayStandingPage from './containers/client/StandingPage';\nimport LoginPage from './containers/admin/LoginPage';\nimport DashboardPage from './containers/admin/DashboardPage';\nimport EditPage from './containers/admin/EditPage';\nimport HostPage from './containers/admin/HostPage';\nimport HostQuestionPage from './containers/admin/HostQuestionPage';\nimport GradingPage from './containers/admin/GradingPage';\nimport HostStandingsPage from './containers/admin/StandingsPage';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/play\" component={PlayPage} />\n        <GameRoute exact path=\"/play/waiting\" component={WaitingPage} />\n        <GameRoute exact path=\"/play/answer\" component={AnswerPage} />\n        <GameRoute exact path=\"/play/standing\" component={PlayStandingPage} />\n        <Route exact path=\"/admin/login\" component={LoginPage} />\n        <AdminRoute exact path=\"/admin/dashboard\" component={DashboardPage} />\n        <AdminRoute exact path=\"/admin/edit/:id\" component={EditPage} />\n        <AdminRoute exact path=\"/host/join\" component={HostPage} />\n        <AdminRoute exact path=\"/host/question/:qnum\" component={HostQuestionPage} />\n        <AdminRoute exact path=\"/host/grading\" component={GradingPage} />\n        <AdminRoute exact path=\"/host/standings\" component={HostStandingsPage} />\n        <Route component={HomePage} />\n      </Switch>\n    </BrowserRouter>\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__158Pe\",\"header\":\"styles_header__1Pd7W\",\"answerContainer\":\"styles_answerContainer__390sy\",\"answerNum\":\"styles_answerNum__2ponQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3yLd7\",\"text\":\"styles_text__rvx52\",\"excuseText\":\"styles_excuseText__1cqea\",\"noButton\":\"styles_noButton__2ARFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"holder\":\"styles_holder__1im62\",\"bounce1\":\"styles_bounce1___BVxo\",\"bounce2\":\"styles_bounce2__1cygT\",\"bounce3\":\"styles_bounce3__2VPIn\",\"bounceDelay\":\"styles_bounceDelay__1QqtS\"};"],"sourceRoot":""}